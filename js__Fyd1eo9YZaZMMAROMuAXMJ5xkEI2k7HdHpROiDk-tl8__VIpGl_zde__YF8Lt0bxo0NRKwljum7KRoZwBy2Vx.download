/*!
 * jQuery.scrollTo
 * Copyright (c) 2007-2015 Ariel Flesler - aflesler ○ gmail • com | http://flesler.blogspot.com
 * Licensed under MIT
 * http://flesler.blogspot.com/2007/10/jqueryscrollto.html
 * @projectDescription Lightweight, cross-browser and highly customizable animated scrolling with jQuery
 * @author Ariel Flesler
 * @version 2.1.2
 */
;(function(factory) {
	'use strict';
	if (typeof define === 'function' && define.amd) {
		// AMD
		define(['jquery'], factory);
	} else if (typeof module !== 'undefined' && module.exports) {
		// CommonJS
		module.exports = factory(require('jquery'));
	} else {
		// Global
		factory(jQuery);
	}
})(function($) {
	'use strict';

	var $scrollTo = $.scrollTo = function(target, duration, settings) {
		return $(window).scrollTo(target, duration, settings);
	};

	$scrollTo.defaults = {
		axis:'xy',
		duration: 0,
		limit:true
	};

	function isWin(elem) {
		return !elem.nodeName ||
			$.inArray(elem.nodeName.toLowerCase(), ['iframe','#document','html','body']) !== -1;
	}		

	$.fn.scrollTo = function(target, duration, settings) {
		if (typeof duration === 'object') {
			settings = duration;
			duration = 0;
		}
		if (typeof settings === 'function') {
			settings = { onAfter:settings };
		}
		if (target === 'max') {
			target = 9e9;
		}

		settings = $.extend({}, $scrollTo.defaults, settings);
		// Speed is still recognized for backwards compatibility
		duration = duration || settings.duration;
		// Make sure the settings are given right
		var queue = settings.queue && settings.axis.length > 1;
		if (queue) {
			// Let's keep the overall duration
			duration /= 2;
		}
		settings.offset = both(settings.offset);
		settings.over = both(settings.over);

		return this.each(function() {
			// Null target yields nothing, just like jQuery does
			if (target === null) return;

			var win = isWin(this),
				elem = win ? this.contentWindow || window : this,
				$elem = $(elem),
				targ = target, 
				attr = {},
				toff;

			switch (typeof targ) {
				// A number will pass the regex
				case 'number':
				case 'string':
					if (/^([+-]=?)?\d+(\.\d+)?(px|%)?$/.test(targ)) {
						targ = both(targ);
						// We are done
						break;
					}
					// Relative/Absolute selector
					targ = win ? $(targ) : $(targ, elem);
					/* falls through */
				case 'object':
					if (targ.length === 0) return;
					// DOMElement / jQuery
					if (targ.is || targ.style) {
						// Get the real position of the target
						toff = (targ = $(targ)).offset();
					}
			}

			var offset = $.isFunction(settings.offset) && settings.offset(elem, targ) || settings.offset;

			$.each(settings.axis.split(''), function(i, axis) {
				var Pos	= axis === 'x' ? 'Left' : 'Top',
					pos = Pos.toLowerCase(),
					key = 'scroll' + Pos,
					prev = $elem[key](),
					max = $scrollTo.max(elem, axis);

				if (toff) {// jQuery / DOMElement
					attr[key] = toff[pos] + (win ? 0 : prev - $elem.offset()[pos]);

					// If it's a dom element, reduce the margin
					if (settings.margin) {
						attr[key] -= parseInt(targ.css('margin'+Pos), 10) || 0;
						attr[key] -= parseInt(targ.css('border'+Pos+'Width'), 10) || 0;
					}

					attr[key] += offset[pos] || 0;

					if (settings.over[pos]) {
						// Scroll to a fraction of its width/height
						attr[key] += targ[axis === 'x'?'width':'height']() * settings.over[pos];
					}
				} else {
					var val = targ[pos];
					// Handle percentage values
					attr[key] = val.slice && val.slice(-1) === '%' ?
						parseFloat(val) / 100 * max
						: val;
				}

				// Number or 'number'
				if (settings.limit && /^\d+$/.test(attr[key])) {
					// Check the limits
					attr[key] = attr[key] <= 0 ? 0 : Math.min(attr[key], max);
				}

				// Don't waste time animating, if there's no need.
				if (!i && settings.axis.length > 1) {
					if (prev === attr[key]) {
						// No animation needed
						attr = {};
					} else if (queue) {
						// Intermediate animation
						animate(settings.onAfterFirst);
						// Don't animate this axis again in the next iteration.
						attr = {};
					}
				}
			});

			animate(settings.onAfter);

			function animate(callback) {
				var opts = $.extend({}, settings, {
					// The queue setting conflicts with animate()
					// Force it to always be true
					queue: true,
					duration: duration,
					complete: callback && function() {
						callback.call(elem, targ, settings);
					}
				});
				$elem.animate(attr, opts);
			}
		});
	};

	// Max scrolling position, works on quirks mode
	// It only fails (not too badly) on IE, quirks mode.
	$scrollTo.max = function(elem, axis) {
		var Dim = axis === 'x' ? 'Width' : 'Height',
			scroll = 'scroll'+Dim;

		if (!isWin(elem))
			return elem[scroll] - $(elem)[Dim.toLowerCase()]();

		var size = 'client' + Dim,
			doc = elem.ownerDocument || elem.document,
			html = doc.documentElement,
			body = doc.body;

		return Math.max(html[scroll], body[scroll]) - Math.min(html[size], body[size]);
	};

	function both(val) {
		return $.isFunction(val) || $.isPlainObject(val) ? val : { top:val, left:val };
	}

	// Add special hooks so that window scroll properties can be animated
	$.Tween.propHooks.scrollLeft = 
	$.Tween.propHooks.scrollTop = {
		get: function(t) {
			return $(t.elem)[t.prop]();
		},
		set: function(t) {
			var curr = this.get(t);
			// If interrupt is true and user scrolled, stop animating
			if (t.options.interrupt && t._last && t._last !== curr) {
				return $(t.elem).stop();
			}
			var next = Math.round(t.now);
			// Don't waste CPU
			// Browsers don't render floating point scroll
			if (curr !== next) {
				$(t.elem)[t.prop](next);
				t._last = this.get(t);
			}
		}
	};

	// AMD requirement
	return $scrollTo;
});

;/*})'"*/
;/*})'"*/
(function ($) {
    'use strict';
    Drupal.behaviors.igcommerce_collapsingMenus = {
        attach: function (context, settings) {
            /*  This toggle expects code something like this...
             <div class="custom-collapse">
                <div class="panel-heading">
                    <h4>Title Goes Here
                        <a data-parent="#accordion" href="#" data-toggle="collapse" class="collapsed plus-minus"></a>
                    </h4>
                </div>
                <div class="panel-body">
                    <div class="collapsed panel-collapse">
                        Accordion Guts go here
                    </div>
                </div>
            </div>
            */

            // Android has an issues with auto hyphenation (https://github.com/readium/readium-css/issues/31) - add a class we can target on android to fix this
            if (navigator.userAgent.match(/Android/)) {
              $('div.main-container').addClass('android-ua');
            }  
            
            var collapseGroups = ['.panel-group', '.custom-collapse'];
            var buildToggle = function(menuGroup, menuTrigger, collapsible){
                var openMenus;
                var openHeight;
                $(menuTrigger).each(function(index, value){
                    // Prevent the href from just going to its link
                    $(this).unbind().on('click', function menuToggle (e){
                        // THIS AFFECTS ALL ACCORDIONS THAT HAVE A BUTTON TO OPEN THEM
                        if ($(e.target).is('button') || ($(e.target).parent().is('button'))){
                            $(e.target).parent().next(collapsible).slideToggle({easing: 'swing'});
                            $(e.target).next(collapsible).slideToggle({easing: 'swing'});
                            //$(window).scrollTo(-100, 100); //webin-114: This is scrolling brightcove video player on click.
                        }
                        // THIS AFFECTS ALL ACCORDIONS THAT HAVE A PLUS/MINUS
                        // IN PARTICULAR, THESE AFFECT THE SIDEBAR MENUS
                        else if ($(e.target).is('a') && $(e.target).hasClass('plus-minus')){
                            e.preventDefault();
                            // find all of the items with class expanded
                            openMenus = $(menuGroup).find('.expanded');
                            console.log($(menuGroup));
                            // for each expanded item, if they have an href property attached,
                            // remove the expanded wrapper and expanded classes
                            $(openMenus).each(function(index,value){
                                if ($(e.target).prop('href') !== $(value).prop('href')){
                                    openHeight = $(value).parent().next().outerHeight(true);
                                    $(value).parent().next().slideUp();
                                    $(value).parent().removeClass('expanded-wrapper');
                                    $(value).removeClass('expanded');
                                }
                            });
                            // add the class expanded, expanded wrapper
                            // toggle the next child
                            $(e.target).toggleClass('expanded');
                            $(e.target).parent().toggleClass('expanded-wrapper');
                            $(e.target).parent().next(collapsible).slideToggle({easing: 'swing'});
                            if (openHeight !== undefined){
                                console.log('openHeight');
                                $(window).animate({
                                    scrollTop: $(e.target).parent().offset().top - openHeight - 200
                                });
                            }
                        }

                        // THIS AFFECTS ALL ACCORDIONS THAT MIGHT BE INSIDE CONTENT
                        // Added .collapsed to the a, as it was preventing anchors in contents from working. -RRN
                        else if ($(e.target).is('a.collapsed') && $(e.target).data('toggle') == 'collapse'){
                            if ($(e.target).parents('.panel-group').length > 0){
                                $(e.target).parents('.panel-group').each( function(index,value){
                                    if ($(value).attr('aria-multiselectable')== 'true'){
                                        e.preventDefault();
                                    }
                                });
                            }
                            $(e.target).toggleClass('expanded');
                            $(e.target).parent().parent().toggleClass('expanded-wrapper');
                            $(e.target).parent().parent().next(collapsible).slideToggle({easing: 'swing'});
                            // $(window).scrollTo(-100, 100);
                        }
                    });
                })
            };
            $(collapseGroups).each(function(index,value){
                var menuGroup = $(value);
                var menuTrigger = menuGroup.find('a, button').data('toggle', 'collapse');
                var collapsible = '.collapse';
                buildToggle(menuGroup, menuTrigger, collapsible);
            });
        }
    };

    // If you put a $(window).load(function inside of Drupal.behaviors, it 
    // will fire intermittently, and should be avoided. THe behavior below
    // is for testing purposes only.
    // Drupal.behaviors.igcommerce_dom_notifier = {
    //   attach: function (context, settings) {
    //     $(document).ready(function (e) {
    //       console.log('document.ready');
    //     });

    //     $(window).load(function (e) {
    //       console.log("window.load");
    //     });
    //   }
    // };

    // Adds/removes active class to mmenu toggle. Clickout to mimic language
    // picker and search button functionality.
    Drupal.behaviors.igcommerce_main_burger_toggle = {
      attach: function (context, settings) {
        // .once keeps this from getting added multiple times on pages that use ajax to refresh content.  
        $('.navbar-toggle').once().click(function() {
          // $(this).toggleClass('active');
          //Opens MMenu right - added here to prevent bug if mmenu is close with lang or search.
          $('#mmenu_right').mmenu().trigger("open.mm");
          // if ($(this).hasClass('active')) {
          //   $('.navbar-toggle').on('clickout', function (e) {
          //     $('.navbar-toggle').removeClass('active');
          //   });
          // } 
        });
      }
    };

    // MMenu is adding a counter of 0 to menu items with their children hidden. The > href is also bringing
    // us to a blank menu page, rather than the toc (Accessories and Intrinsically safe for example)
    // This removes the 0 counter, and the href for these items
    Drupal.behaviors.igcommerce_counterMobileMenu = {
      attach: function (context, settings) {
        var searchText = '0';
        $('em.mm-counter').filter(function () {
          return $(this).text() === searchText;
        }).next().remove(); //Removed href after '0' counter to prevent linking to blank child
        $('em.mm-counter').filter(function () {
          return $(this).text() === searchText;
        }).remove(); //Removed '0' counter
      }
    };

    // Unbounce bar styling
    // The unbounce banner bar is added async with javascript that is put on the
    // page using Google Tag manager. The banner is in a div that adjusts the 
    // styling of the body to make room for the bar.  The bar itself is in an 
    // iframe. We can add styling and scripts to the unbounce bar through the 
    // unbounce site, but since it's in an iframe, those styles and scritps 
    // can't interact with the live page. 
    // 
    // When the unbounce bar is first loaded, it will push everything on the 
    // page down to make room for itself. This script waits for the user to 
    // scroll, then checks if there's an unbounce bar, then checks what it's 
    // height is, then adds a corresponding style to the head. The close button
    // for the unbounce bar is outside the iframe, so we can attach a click()
    // handler that will remove our added styling when the bar is closed.
    // 
    // It's possible that the user starts scrolling before the page starts 
    // loading, so we also check after 2 seconds to see if the unbounce bar 
    // exsists.
    //
    // I tried delivering this compensation script through google tag manager,
    // But there's different tags delivering the scripts to different locales,
    // so it made more sense to put the script here and have it fire on all 
    // locales.
    // 
    // I also tried using a mutation observer to watch for the addition of the 
    // stickybar, but it turns out we're loading a butt-ton of stuff async, so
    // parsing all the async junk was way more processing heavy then the checks
    // we're doing below.
    Drupal.behaviors.igcommerce_unbounce_styling = {
      attach: function (context, settings) {
        // Check on scroll if there's an unbounce bar:
        var firstScroll = true;
        $(window).on('scroll', function() {
          if (firstScroll) {
            unbounce_bar_styling_compensation();
            // Ensures this code doesn't execute twice on the same page.
            firstScroll = false; 
          }
        });

        // Check 2 seconds after page load if an unbounce bar came in:
        setTimeout(function() {
          unbounce_bar_styling_compensation();
        }, 2000);
        
        function unbounce_bar_styling_compensation() {
          // Checks if the unbounce bar has been added to the page.
          if ($(".ub-emb-bar.ub-emb-visible").length ) {
            // Gets the height of the unbounce bar from it's parent wrapper.
            var bar_height = $('.ub-emb-bar .ub-emb-iframe-wrapper').height();
            var algolia_top = 27 + bar_height; // The language picker is 27 px and above the main nav, so we add an offset to accomidate that.
            var algolia_resuls_top_mobile = 134 + bar_height; // The mobile search results box.
            var algolia_resuls_top_tablet = 167 + bar_height; // The mobile search results box.
            var algolia_resuls_top_desk = 77 + bar_height; // The desktop search results box.
            
            // Adds css to the head to compensate the sticky navs for the height of the unbounce bar.
            $('head').append('<style id="ub_compensator" type="text/css"> \
              #sticky-wrap.stickynav-active { \
                margin-top: ' + bar_height + 'px !important; \
              } \
              #block-igcommerce-utility-algolia-algolia-search  .alg-instant-container.alg-resp-mobile, \
              #block-igcommerce-utility-algolia-algolia-search  .alg-instant-container.alg-resp-tablet { \
                top:' + algolia_resuls_top_mobile + 'px !important; \
              } \
              @media screen and (min-width: 768px) { \
                #block-igcommerce-utility-algolia-algolia-search  .alg-instant-container.alg-resp-tablet { \
                  top:' + algolia_resuls_top_tablet + 'px !important; \
                } \
              } \
              @media screen and (min-width: 1280px) { \
                #block-igcommerce-utility-algolia-algolia-search .alg-search-box-main.alg-search-input-box.alg-search-fixed { \
                  top:' + algolia_top + 'px !important; \
                } \
                #block-igcommerce-utility-algolia-algolia-search  .alg-instant-container.alg-resp-desktop { \
                  top:' + algolia_resuls_top_desk + 'px !important; \
                } \
              } \
              </style>');
            // When unbounce bar is closed, this removes the css to compensate for unbounce bar height.
            $( ".ub-emb-bar.ub-emb-visible .ub-emb-close" ).click(function() {
              $("#ub_compensator").remove();
            }); 
          } 
        }
      }
    };


}(jQuery));
//console.log("theme layer scripts.js loaded");

;/*})'"*/
;/*})'"*/
/**
 * jQuery Clickout Plugin
 * @version 0.0.3
 * @author Guilherme Santiago - github.com/gsantiago
 *
 * This is used for the main nav searchbar and country picker. RRN 11-2-17
 */
!function(e,n){var t="function"==typeof require?require:function(e){return{jquery:jQuery}[e]};"object"==typeof exports&&"undefined"!=typeof module?module.exports=n(t):"function"==typeof define&&define.amd?define(["jquery"],n.bind(e,t)):e.jQueryClickout=n(t)}(this,function(e,n,t,r){return function o(n,t,r){function u(c,f){if(!t[c]){if(!n[c]){var l="function"==typeof e&&e;if(!f&&l)return l(c,!0);if(i)return i(c,!0);var a=new Error("Cannot find module '"+c+"'");throw a.code="MODULE_NOT_FOUND",a}var d=t[c]={exports:{}};n[c][0].call(d.exports,function(e){var t=n[c][1][e];return u(t?t:e)},d,d.exports,o,n,t,r)}return t[c].exports}for(var i="function"==typeof e&&e,c=0;c<r.length;c++)u(r[c]);return u}({1:[function(e,n,t){var r=e("jquery"),o=r(document),u={},i=!1;r.event.special.clickout={setup:function(e,n,t){i||(o.on("click.clickout-handler",function(e){r.each(u,function(n,t){var o=!0;r.each(t.elements,function(n,t){r(e.target).closest(t).length&&(o=!1)}),o&&t.handler.call(r(t.elements),e)})}),i=!0)},teardown:function(){u||(o.off("click.clickout-handler"),i=!1)},add:function(e){var n=e.guid;u.hasOwnProperty(n)?u[n].elements.push(this):u[n]={elements:[this],handler:e.handler}},remove:function(e){delete u[e.guid]}}},{jquery:"jquery"}]},{},[1])(1)});
;/*})'"*/
;/*})'"*/
// mig2321 - Moved this function from the following 2 identical functions in igcommerce_utility:
// 1) igcommerce_utility/js/video.js 
// 2) igcommerce_utility/modules/igcommerce_utility_training/js/video.js
//
(function ($) {
  Drupal.behaviors.igcommerce_utility_video = {
    attach: function (context, settings) {
      // Resize videos      
      $.colorbox.settings.onLoad = colorboxResize();

      $(window).resize(colorboxResize(true));

      function colorboxResize(resize) {
        var width = $(window).width() > 842 ? 675 : '95%';
        var height = $(window).height() > 700 ? 630: '95%';

        $.colorbox.settings.height = height;
        $.colorbox.settings.width = width;

        //if window is resized while lightbox open
        if(resize) {
          $.colorbox.resize({
            'height': height,
            'width': width
          });
        } 
      }
    }
  };
// Prevents videos from continuing to play in the background when colorbox loads.
// This was happening with download.fluke.com link
Drupal.behaviors.fix_colorbox_video = {
attach: function (context, settings) {
  $('body')
    .once('fix-colorbox-video', function () {
    $(document).bind('cbox_cleanup', function (e) {
    $('div#cboxLoadedContent iframe', this).attr('src', '');
    });
  });
}
};  
})(jQuery);
;/*})'"*/
;/*})'"*/
